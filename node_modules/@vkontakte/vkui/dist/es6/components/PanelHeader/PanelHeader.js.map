{"version":3,"sources":["../../../../src/components/PanelHeader/PanelHeader.tsx"],"names":["React","Component","ReactDOM","PropTypes","classNames","withPlatform","IOS","PanelHeader","ready","panelId","context","panel","leftNode","document","getElementById","addonNode","titleNode","rightNode","getRef","props","element","current","setState","left","addon","children","right","transparent","platform","isPrimitive","state","createPortal","webviewType","string","any","scheme","oneOf"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, ReactNode, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes, { Requireable } from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasPlatform, HasRef } from '../../types/props';\nimport { IOS } from '../../lib/platform';\n\nexport interface PanelHeaderProps extends HTMLAttributes<HTMLDivElement>, HasRef<HTMLDivElement>, HasPlatform {\n  left?: ReactNode;\n  addon?: ReactNode;\n  right?: ReactNode;\n  transparent?: boolean;\n}\n\nexport interface PanelHeaderState {\n  ready: boolean;\n}\n\nexport interface PanelHeaderContext {\n  panel: Requireable<string>;\n  document: Requireable<{}>;\n  scheme: Requireable<string>;\n  webviewType: Requireable<'vkapps' | 'internal'>;\n}\n\n/**\n * @deprecated используйте PanelHeaderSimple\n */\nclass PanelHeader extends Component<PanelHeaderProps, PanelHeaderState> {\n  static defaultProps: PanelHeaderProps = {\n    transparent: false,\n  };\n\n  static contextTypes: PanelHeaderContext = {\n    panel: PropTypes.string,\n    document: PropTypes.any,\n    scheme: PropTypes.string,\n    webviewType: PropTypes.oneOf(['vkapps', 'internal']),\n  };\n\n  state: PanelHeaderState = {\n    ready: false,\n  };\n\n  leftNode: HTMLDivElement;\n  addonNode: HTMLDivElement;\n  titleNode: HTMLDivElement;\n  rightNode: HTMLDivElement;\n\n  get document() {return this.context.document || document;}\n\n  get webviewType() {return this.context.webviewType || 'vkapps';}\n\n  componentDidMount() {\n    const panelId = this.context.panel;\n\n    this.leftNode = this.document.getElementById(`header-left-${panelId}`);\n    this.addonNode = this.document.getElementById(`header-addon-${panelId}`);\n    this.titleNode = this.document.getElementById(`header-title-${panelId}`);\n    this.rightNode = this.document.getElementById(`header-right-${panelId}`);\n\n    const getRef = this.props.getRef;\n    if (getRef) {\n      const element = this.document.getElementById(`panel-header-${panelId}`);\n      if (typeof getRef === 'function') {\n        getRef(element);\n      } else {\n        getRef.current = element;\n      }\n    }\n\n    this.setState({ ready: true });\n  }\n\n  render() {\n    let { left, addon, children, right, transparent, platform } = this.props;\n    const isPrimitive = typeof children === 'string' || typeof children === 'number';\n\n    return this.state.ready ? [\n      ReactDOM.createPortal(<div className={classNames('PanelHeader-left-in', {\n        'PanelHeader-left-in--tp': transparent,\n      })}>{left}</div>, this.leftNode),\n      platform === IOS && ReactDOM.createPortal(<div className={classNames('PanelHeader-addon', {\n        'PanelHeader-addon--tp': transparent,\n      })}>{addon}</div>, this.addonNode),\n      ReactDOM.createPortal(<div className={classNames('PanelHeader-content', {\n        'PanelHeader-content--tp': transparent,\n      })}>\n        {isPrimitive ? <span>{children}</span> : children}\n      </div>, this.titleNode),\n      ReactDOM.createPortal(<div className={classNames('PanelHeader-right', {\n        'PanelHeader-right--tp': transparent,\n        'PanelHeader-right--vkapps': this.webviewType === 'vkapps',\n      })}>{this.webviewType === 'internal' ? right : null}</div>, this.rightNode),\n    ] : null;\n  }\n}\n\nexport default withPlatform(PanelHeader);\n"],"file":"PanelHeader.js"}