{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProviderContext.tsx"],"names":["createContext","vkBridge","ConfigProviderContext","webviewType","isWebView","scheme"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AASA,IAAMC,qBAAqB,GAAGF,aAAa,CAAiC;AAC1EG,EAAAA,WAAW,EAAE,UAD6D;AAE1EC,EAAAA,SAAS,EAAEH,QAAQ,CAACG,SAAT,EAF+D;AAG1EC,EAAAA,MAAM,EAAE;AAHkE,CAAjC,CAA3C;AAMA,eAAeH,qBAAf","sourcesContent":["import { createContext } from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\n\nexport interface ConfigProviderContextInterface {\n  scheme?: 'client_light' | 'client_dark' | 'bright_light' | 'space_gray';\n  isWebView?: boolean;\n  webviewType?: 'vkapps' | 'internal';\n  app?: string;\n}\n\nconst ConfigProviderContext = createContext<ConfigProviderContextInterface>({\n  webviewType: 'internal',\n  isWebView: vkBridge.isWebView(),\n  scheme: 'bright_light',\n});\n\nexport default ConfigProviderContext;\n"],"file":"ConfigProviderContext.js"}