{"ast":null,"code":"export function getOffsetRect(elem) {\n  var box = elem.getBoundingClientRect();\n  var body = document.body;\n  var doc = document.documentElement;\n  var scrollTop = window.pageYOffset || doc.scrollTop || body.scrollTop;\n  var scrollLeft = window.pageXOffset || doc.scrollLeft || body.scrollLeft;\n  var clientTop = doc.clientTop || body.clientTop || 0;\n  var clientLeft = doc.clientLeft || body.clientLeft || 0;\n  return {\n    top: Math.round(box.top + scrollTop - clientTop),\n    left: Math.round(box.left + scrollLeft - clientLeft),\n    width: elem.offsetWidth,\n    height: elem.offsetHeight\n  };\n}","map":{"version":3,"sources":["../../../src/lib/offset.ts"],"names":["box","elem","body","document","doc","scrollTop","window","scrollLeft","clientTop","clientLeft","top","Math","left","width","height","offsetHeight"],"mappings":"AAOA,OAAO,SAAA,aAAA,CAAA,IAAA,EAA+D;AACpE,MAAMA,GAAG,GAAGC,IAAI,CAAhB,qBAAYA,EAAZ;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAArB,IAAA;AACA,MAAMC,GAAG,GAAGD,QAAQ,CAApB,eAAA;AACA,MAAME,SAAS,GAAGC,MAAM,CAANA,WAAAA,IAAsBF,GAAG,CAAzBE,SAAAA,IAAuCJ,IAAI,CAA7D,SAAA;AACA,MAAMK,UAAU,GAAGD,MAAM,CAANA,WAAAA,IAAsBF,GAAG,CAAzBE,UAAAA,IAAwCJ,IAAI,CAA/D,UAAA;AACA,MAAMM,SAAS,GAAGJ,GAAG,CAAHA,SAAAA,IAAiBF,IAAI,CAArBE,SAAAA,IAAlB,CAAA;AACA,MAAMK,UAAU,GAAGL,GAAG,CAAHA,UAAAA,IAAkBF,IAAI,CAAtBE,UAAAA,IAAnB,CAAA;AAEA,SAAO;AACLM,IAAAA,GAAG,EAAEC,IAAI,CAAJA,KAAAA,CAAWX,GAAG,CAAHA,GAAAA,GAAAA,SAAAA,GADX,SACAW,CADA;AAELC,IAAAA,IAAI,EAAED,IAAI,CAAJA,KAAAA,CAAWX,GAAG,CAAHA,IAAAA,GAAAA,UAAAA,GAFZ,UAECW,CAFD;AAGLE,IAAAA,KAAK,EAAEZ,IAAI,CAHN,WAAA;AAILa,IAAAA,MAAM,EAAEb,IAAI,CAACc;AAJR,GAAP;AAMD","sourcesContent":["export interface OffsetRectInterface {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nexport function getOffsetRect(elem: HTMLElement): OffsetRectInterface {\n  const box = elem.getBoundingClientRect();\n  const body = document.body;\n  const doc = document.documentElement;\n  const scrollTop = window.pageYOffset || doc.scrollTop || body.scrollTop;\n  const scrollLeft = window.pageXOffset || doc.scrollLeft || body.scrollLeft;\n  const clientTop = doc.clientTop || body.clientTop || 0;\n  const clientLeft = doc.clientLeft || body.clientLeft || 0;\n\n  return {\n    top: Math.round(box.top + scrollTop - clientTop),\n    left: Math.round(box.left + scrollLeft - clientLeft),\n    width: elem.offsetWidth,\n    height: elem.offsetHeight,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}