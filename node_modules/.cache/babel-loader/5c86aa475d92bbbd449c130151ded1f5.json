{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport { transitionEndEventName, transitionStartEventName } from '../View/View';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport withPlatform from '../../hoc/withPlatform';\n\nvar FixedLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(FixedLayout, _React$Component);\n\n  function FixedLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FixedLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FixedLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      position: null,\n      top: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"el\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewTransitionStart\", function (e) {\n      var panelScroll = e.detail.scrolls[_this.context.panel] || 0;\n\n      _this.setState({\n        position: 'absolute',\n        top: _this.el.offsetTop + panelScroll\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewTransitionEnd\", function () {\n      _this.setState({\n        position: null,\n        top: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (element) {\n      _this.el = element;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(element);\n        } else {\n          getRootRef.current = element;\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(FixedLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.document.addEventListener(transitionStartEventName, this.onViewTransitionStart);\n      this.document.addEventListener(transitionEndEventName, this.onViewTransitionEnd);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.document.removeEventListener(transitionStartEventName, this.onViewTransitionStart);\n      this.document.removeEventListener(transitionEndEventName, this.onViewTransitionEnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          style = _this$props.style,\n          vertical = _this$props.vertical,\n          getRootRef = _this$props.getRootRef,\n          insets = _this$props.insets,\n          platform = _this$props.platform,\n          filled = _this$props.filled,\n          restProps = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"style\", \"vertical\", \"getRootRef\", \"insets\", \"platform\", \"filled\"]);\n\n      var tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n      var paddingBottom = vertical === 'bottom' && isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null;\n      return React.createElement(\"div\", _extends({}, restProps, {\n        ref: this.getRef,\n        className: classNames(getClassName('FixedLayout', platform), {\n          'FixedLayout--filled': filled\n        }, \"FixedLayout--\".concat(vertical), className),\n        style: _objectSpread({}, style, {}, this.state, {\n          paddingBottom: paddingBottom\n        })\n      }), React.createElement(\"div\", {\n        className: \"FixedLayout__in\"\n      }, children));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }]);\n\n  return FixedLayout;\n}(React.Component);\n\n_defineProperty(FixedLayout, \"contextTypes\", {\n  panel: PropTypes.string,\n  document: PropTypes.any,\n  hasTabbar: PropTypes.bool\n});\n\nexport default withPlatform(withInsets(FixedLayout));","map":{"version":3,"sources":["../../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["FixedLayout","React","Component","position","top","panel","PropTypes","document","hasTabbar","bool","panelScroll","e","getRootRef","className","children","style","vertical","insets","platform","filled","restProps","tabbarPadding","paddingBottom","isNumeric","classNames","getClassName","withPlatform","withInsets"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport PropTypes, { Requireable } from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport { transitionEndEventName, TransitionStartEventDetail, transitionStartEventName } from '../View/View';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport { HasInsets, HasPlatform, HasRootRef } from '../../types/props';\nimport withPlatform from '../../hoc/withPlatform';\nimport { GetRef } from '../../types/common';\n\nexport interface FixedLayoutProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>,\n  HasInsets,\n  HasPlatform {\n  vertical?: 'top' | 'bottom';\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: 'absolute' | null;\n  top: number;\n}\n\nexport interface FixedLayoutContext {\n  panel: Requireable<string>;\n  document: Requireable<{}>;\n  hasTabbar: Requireable<boolean>;\n}\n\nclass FixedLayout extends React.Component<FixedLayoutProps, FixedLayoutState> {\n  state: FixedLayoutState = {\n    position: null,\n    top: null,\n  };\n\n  el: HTMLDivElement;\n\n  static contextTypes: FixedLayoutContext = {\n    panel: PropTypes.string,\n    document: PropTypes.any,\n    hasTabbar: PropTypes.bool,\n  };\n\n  get document() {\n    return this.context.document || document;\n  }\n\n  componentDidMount() {\n    this.document.addEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.addEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  componentWillUnmount() {\n    this.document.removeEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.removeEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  onViewTransitionStart: EventListener = (e: CustomEvent<TransitionStartEventDetail>) => {\n    let panelScroll = e.detail.scrolls[this.context.panel] || 0;\n    this.setState({\n      position: 'absolute',\n      top: this.el.offsetTop + panelScroll,\n    });\n  };\n\n  onViewTransitionEnd: VoidFunction = () => {\n    this.setState({\n      position: null,\n      top: null,\n    });\n  };\n\n  getRef: GetRef<HTMLDivElement> = (element: HTMLDivElement) => {\n    this.el = element;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(element);\n      } else {\n        getRootRef.current = element;\n      }\n    }\n  };\n\n  render() {\n    const { className, children, style, vertical, getRootRef, insets, platform, filled, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n    const paddingBottom = vertical === 'bottom' && isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null;\n\n    return (\n      <div\n        {...restProps}\n        ref={this.getRef}\n        className={classNames(getClassName('FixedLayout', platform), {\n          'FixedLayout--filled': filled,\n        }, `FixedLayout--${vertical}`, className)}\n        style={{ ...style, ...this.state, paddingBottom }}\n      >\n        <div className=\"FixedLayout__in\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(FixedLayout));\n"]},"metadata":{},"sourceType":"module"}