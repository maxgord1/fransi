{"ast":null,"code":"import { createContext } from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nvar ConfigProviderContext = createContext({\n  webviewType: 'internal',\n  isWebView: vkBridge.isWebView(),\n  scheme: 'bright_light'\n});\nexport default ConfigProviderContext;","map":{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProviderContext.tsx"],"names":["ConfigProviderContext","createContext","webviewType","isWebView","vkBridge","scheme"],"mappings":"AAAA,SAAA,aAAA,QAAA,OAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AASA,IAAMA,qBAAqB,GAAGC,aAAa,CAAiC;AAC1EC,EAAAA,WAAW,EAD+D,UAAA;AAE1EC,EAAAA,SAAS,EAAEC,QAAQ,CAFuD,SAE/DA,EAF+D;AAG1EC,EAAAA,MAAM,EAAE;AAHkE,CAAjC,CAA3C;AAMA,eAAA,qBAAA","sourcesContent":["import { createContext } from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\n\nexport interface ConfigProviderContextInterface {\n  scheme?: 'client_light' | 'client_dark' | 'bright_light' | 'space_gray';\n  isWebView?: boolean;\n  webviewType?: 'vkapps' | 'internal';\n  app?: string;\n}\n\nconst ConfigProviderContext = createContext<ConfigProviderContextInterface>({\n  webviewType: 'internal',\n  isWebView: vkBridge.isWebView(),\n  scheme: 'bright_light',\n});\n\nexport default ConfigProviderContext;\n"]},"metadata":{},"sourceType":"module"}