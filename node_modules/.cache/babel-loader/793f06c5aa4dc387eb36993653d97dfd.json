{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useContext } from 'react';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassname from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { ANDROID } from '../../lib/platform';\nimport ConfigProviderContext from '../ConfigProvider/ConfigProviderContext';\n\nvar PanelHeaderSimple = function PanelHeaderSimple(_ref) {\n  var className = _ref.className,\n      left = _ref.left,\n      addon = _ref.addon,\n      children = _ref.children,\n      right = _ref.right,\n      separator = _ref.separator,\n      visor = _ref.visor,\n      transparent = _ref.transparent,\n      getRef = _ref.getRef,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"left\", \"addon\", \"children\", \"right\", \"separator\", \"visor\", \"transparent\", \"getRef\", \"getRootRef\"]);\n\n  var platform = usePlatform();\n\n  var _useContext = useContext(ConfigProviderContext),\n      webviewType = _useContext.webviewType;\n\n  return React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(getClassname('PanelHeaderSimple', platform), {\n      'PanelHeaderSimple--trnsp': transparent,\n      'PanelHeaderSimple--vis': visor,\n      'PanelHeaderSimple--sep': separator && visor,\n      'PanelHeaderSimple--vkapps': webviewType === 'vkapps'\n    }, className),\n    ref: getRootRef\n  }), React.createElement(FixedLayout, {\n    vertical: \"top\",\n    className: \"PanelHeaderSimple__fixed\",\n    getRootRef: getRef\n  }, React.createElement(\"div\", {\n    className: \"PanelHeaderSimple__in\"\n  }, React.createElement(\"div\", {\n    className: \"PanelHeaderSimple__left\"\n  }, React.createElement(\"div\", {\n    className: \"PanelHeaderSimple__left-in\"\n  }, left), platform !== ANDROID && !!addon && React.createElement(\"div\", {\n    className: \"PanelHeaderSimple__addon\"\n  }, addon)), React.createElement(\"div\", {\n    className: \"PanelHeaderSimple__content\"\n  }, children), React.createElement(\"div\", {\n    className: \"PanelHeaderSimple__right\"\n  }, webviewType !== 'vkapps' && right))), separator && visor && React.createElement(Separator, {\n    className: \"PanelHeaderSimple__separator\"\n  }));\n};\n\nPanelHeaderSimple.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true\n};\nexport default PanelHeaderSimple;","map":{"version":3,"sources":["../../../../src/components/PanelHeaderSimple/PanelHeaderSimple.tsx"],"names":["PanelHeaderSimple","className","left","addon","children","right","separator","visor","transparent","getRef","getRootRef","restProps","platform","usePlatform","webviewType","useContext","classNames","getClassname"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, ReactNode, useContext } from 'react';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassname from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { ANDROID } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types/props';\nimport ConfigProviderContext from '../ConfigProvider/ConfigProviderContext';\n\nexport interface PanelHeaderSimpleProps extends HTMLAttributes<HTMLDivElement>, HasRef<HTMLDivElement>, HasRootRef<HTMLDivElement> {\n  left?: ReactNode;\n  addon?: ReactNode;\n  right?: ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n}\n\nconst PanelHeaderSimple = ({\n  className,\n  left,\n  addon,\n  children,\n  right,\n  separator,\n  visor,\n  transparent,\n  getRef,\n  getRootRef,\n  ...restProps\n}: PanelHeaderSimpleProps) => {\n  const platform = usePlatform();\n  const { webviewType } = useContext(ConfigProviderContext);\n\n  return (\n    <div\n      {...restProps}\n      className={\n        classNames(\n          getClassname('PanelHeaderSimple', platform),\n          {\n            'PanelHeaderSimple--trnsp': transparent,\n            'PanelHeaderSimple--vis': visor,\n            'PanelHeaderSimple--sep': separator && visor,\n            'PanelHeaderSimple--vkapps': webviewType === 'vkapps',\n          },\n          className,\n        )\n      }\n      ref={getRootRef}\n    >\n      <FixedLayout vertical=\"top\" className=\"PanelHeaderSimple__fixed\" getRootRef={getRef}>\n        <div className=\"PanelHeaderSimple__in\">\n          <div className=\"PanelHeaderSimple__left\">\n            <div className=\"PanelHeaderSimple__left-in\">\n              {left}\n            </div>\n            {platform !== ANDROID && !!addon &&\n            <div className=\"PanelHeaderSimple__addon\">\n              {addon}\n            </div>\n            }\n          </div>\n          <div className=\"PanelHeaderSimple__content\">\n            {children}\n          </div>\n          <div className=\"PanelHeaderSimple__right\">\n            {webviewType !== 'vkapps' && right}\n          </div>\n        </div>\n      </FixedLayout>\n      {separator && visor && <Separator className=\"PanelHeaderSimple__separator\" />}\n    </div>\n  );\n};\n\nPanelHeaderSimple.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true,\n};\n\nexport default PanelHeaderSimple;\n"]},"metadata":{},"sourceType":"module"}