{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\nimport Separator from '../Separator/Separator';\n\nvar Panel = /*#__PURE__*/function (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Panel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        panel: this.props.id\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          insets = _this$props.insets,\n          platform = _this$props.platform,\n          separator = _this$props.separator,\n          getRootRef = _this$props.getRootRef,\n          restProps = _objectWithoutProperties(_this$props, [\"className\", \"centered\", \"children\", \"insets\", \"platform\", \"separator\", \"getRootRef\"]);\n\n      var tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n      return React.createElement(\"div\", _extends({}, restProps, {\n        ref: this.getRef,\n        className: classNames(getClassName('Panel', platform), className, {\n          'Panel--centered': centered\n        })\n      }), React.createElement(Touch, {\n        className: \"Panel__in\",\n        style: {\n          paddingBottom: isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null\n        }\n      }, React.createElement(\"div\", {\n        className: \"Panel__in-before\"\n      }), separator && React.createElement(Separator, {\n        className: \"Panel__separator\"\n      }), centered ? React.createElement(\"div\", {\n        className: \"Panel__centered\"\n      }, children) : children, React.createElement(\"div\", {\n        className: \"Panel__in-after\"\n      })));\n    }\n  }]);\n\n  return Panel;\n}(Component);\n\n_defineProperty(Panel, \"childContextTypes\", {\n  panel: PropTypes.string\n});\n\n_defineProperty(Panel, \"defaultProps\", {\n  children: '',\n  centered: false,\n  separator: true\n});\n\n_defineProperty(Panel, \"contextTypes\", {\n  hasTabbar: PropTypes.bool\n});\n\nexport default withPlatform(withInsets(Panel));","map":{"version":3,"sources":["../../../../src/components/Panel/Panel.tsx"],"names":["Panel","Component","panel","PropTypes","string","children","centered","separator","hasTabbar","bool","id","getRootRef","className","insets","platform","restProps","tabbarPadding","classNames","getClassName","paddingBottom","isNumeric","withPlatform","withInsets"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes } from 'react';\nimport PropTypes, { Requireable } from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\nimport Separator from '../Separator/Separator';\nimport { HasPlatform, HasInsets, HasRootRef } from '../../types/props';\nimport { GetRef } from '../../types/common';\n\nexport interface PanelProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, HasInsets, HasRootRef<HTMLDivElement> {\n  id: string;\n  separator?: boolean;\n  centered?: boolean;\n}\n\nexport interface PanelChildContext {\n  panel: Requireable<string>;\n}\n\nexport interface PanelContext {\n  hasTabbar: Requireable<boolean>;\n}\n\nclass Panel extends Component<PanelProps> {\n  static childContextTypes: PanelChildContext = {\n    panel: PropTypes.string,\n  };\n\n  static defaultProps: Partial<PanelProps> = {\n    children: '',\n    centered: false,\n    separator: true,\n  };\n\n  static contextTypes: PanelContext = {\n    hasTabbar: PropTypes.bool,\n  };\n\n  getChildContext() {\n    return {\n      panel: this.props.id,\n    };\n  }\n\n  container: HTMLDivElement;\n\n  getRef: GetRef<HTMLDivElement> = (container: HTMLDivElement) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  render() {\n    const { className, centered, children, insets, platform, separator, getRootRef, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n\n    return (\n      <div\n        {...restProps}\n        ref={this.getRef}\n        className={classNames(getClassName('Panel', platform), className, {\n          'Panel--centered': centered,\n        })}\n      >\n        <Touch className=\"Panel__in\" style={{\n          paddingBottom: isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null,\n        }}>\n          <div className=\"Panel__in-before\" />\n          {separator && <Separator className=\"Panel__separator\" />}\n          {centered ? <div className=\"Panel__centered\">{children}</div> : children}\n          <div className=\"Panel__in-after\" />\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(Panel));\n"]},"metadata":{},"sourceType":"module"}